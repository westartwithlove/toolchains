defaults: &defaults
  working_directory: /home/nerves/build
  environment:
    ENV: CI
  docker:
    - image: nervesproject/toolchains

install_hex_rebar: &install_hex_rebar
  run:
    name: Install hex and rebar
    command: |
      mix local.hex --force
      mix local.rebar --force

install_nerves_bootstrap: &install_nerves_bootstrap
  run:
    name: Install nerves_bootstrap
    command: mix archive.install hex nerves_bootstrap --force

build: &build
  steps:
    - checkout
    - <<: *install_hex_rebar
    - <<: *install_nerves_bootstrap
    - run: echo "$TOOLCHAIN" > .toolchain
    - run: echo "$BUILD_OS" > .build_os
    - restore_cache:
        key: nerves/dl/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Branch }}
    - run:
        name: Update Path
        command: |
          echo 'export PATH=$HOME/build/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin:$PATH' >> $BASH_ENV
          source $BASH_ENV
    - run:
        name: Fetch Dependencies
        command: git clone git://github.com/raspberrypi/tools.git
    - run:
        name: Fetch Deps
        command: |
          cd $TOOLCHAIN
          mix deps.get
    - run:
        name: Build
        command: |
          cd $TOOLCHAIN
          mix compile
    - run:
        name: "Create artifact dir"
        command: mkdir -p /home/nerves/deploy/toolchain
    - run:
        name: Create artifact
        command: |
          cd $TOOLCHAIN
          mix nerves.artifact $TOOLCHAIN --path /home/nerves/deploy/toolchain
    - save_cache:
        key: nerves/dl/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Branch }}
        paths:
          - $HOME/.nerves/dl
    - store_artifacts:
        path: /home/nerves/deploy/toolchain
        destination: toolchain
    - save_cache:
        key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
        paths:
          - /home/nerves/deploy/toolchain

test: &test
  steps:
    - run:
        name: Setup Cache Vars
        command: |
            echo "$TOOLCHAIN" > .toolchain
            echo "$BUILD_OS" > .build_os
    - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
    - run:
        name: Decompress Toolchain Archive
        command: |
          mkdir -p /root/toolchain
          tar xvf /home/nerves/deploy/toolchain/*.tar.xz --strip-components=1 -C /root/toolchain
    - run:
        name: Compile
        command: /root/toolchain/bin/*-g++ main.cpp

build_workflow: &build_workflow
  context: org-global
  filters:
    tags:
      only: /.*/

test_workflow: &test_workflow
  context: org-global
  filters:
    tags:
      only: /.*/

deploy_workflow: &deploy_workflow
  context: org-global
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /v.*/

canadian_rpi: &canadian_rpi
  HOST_OS: linux
  HOST_ARCH: arm
  BUILD_OS: rpi

linux: &linux
  BUILD_OS: linux

version: 2.0

jobs:

  #-------------------------------
  # armv7_nerves_linux_gnueabihf
  #-------------------------------
  # build
  #  linux
  build_linux_nerves_toolchain_armv7_nerves_linux_gnueabihf:
    <<: *defaults
    environment:
      TOOLCHAIN: nerves_toolchain_armv7_nerves_linux_gnueabihf
      <<: *linux
    <<: *build
  #  rpi
  build_rpi_nerves_toolchain_armv7_nerves_linux_gnueabihf:
    <<: *defaults
    environment:
      TOOLCHAIN: nerves_toolchain_armv7_nerves_linux_gnueabihf
      <<: *canadian_rpi
    <<: *build


  #-------------------------------
  # armv7_nerves_linux_gnueabihf
  #-------------------------------
  # test
  #  linux
  test_linux_trusty_armv7_nerves_linux_gnueabihf:
    working_directory: /root
    docker:
      - image: nervesproject/toolchain-test-ubuntu:trusty
    environment:
      TOOLCHAIN: nerves_toolchain_armv7_nerves_linux_gnueabihf
      <<: *linux
    <<: *test

  deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Create Artifacts Dir
          command: mkdir -p /home/nerves/deploy/artifacts
      - run:
          name: nerves_toolchain_aarch64_nerves_linux_gnu
          command: echo "nerves_toolchain_aarch64_nerves_linux_gnu" > .toolchain
      - run:
          name: linux
          command: echo "linux" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi
          command: echo "rpi" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: nerves_toolchain_armv7_nerves_linux_gnueabihf
          command: echo "nerves_toolchain_armv7_nerves_linux_gnueabihf" > .toolchain
      - run:
          name: linux
          command: echo "linux" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi
          command: echo "rpi" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: nerves_toolchain_armv5_nerves_linux_musleabi
          command: echo "nerves_toolchain_armv5_nerves_linux_musleabi" > .toolchain
      - run:
          name: linux
          command: echo "linux" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi
          command: echo "rpi" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: nerves_toolchain_armv6_nerves_linux_gnueabihf
          command: echo "nerves_toolchain_armv6_nerves_linux_gnueabihf" > .toolchain
      - run:
          name: linux
          command: echo "linux" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi
          command: echo "rpi" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: nerves_toolchain_i586_nerves_linux_gnu
          command: echo "nerves_toolchain_i586_nerves_linux_gnu" > .toolchain
      - run:
          name: linux
          command: echo "linux" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi
          command: echo "rpi" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: nerves_toolchain_mipsel_nerves_linux_musl
          command: echo "nerves_toolchain_mipsel_nerves_linux_musl" > .toolchain
      - run:
          name: linux
          command: echo "linux" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi
          command: echo "rpi" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: nerves_toolchain_x86_64_nerves_linux_gnu
          command: echo "nerves_toolchain_x86_64_nerves_linux_gnu" > .toolchain
      - run:
          name: linux
          command: echo "linux" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi
          command: echo "rpi" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: nerves_toolchain_x86_64_nerves_linux_musl
          command: echo "nerves_toolchain_x86_64_nerves_linux_musl" > .toolchain
      - run:
          name: linux
          command: echo "linux" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi
          command: echo "rpi" > .build_os
      - restore_cache:
          key: nerves/deploy/{{ checksum ".toolchain" }}/{{ checksum ".build_os" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: Copy Artifacts
          command: cp /home/nerves/deploy/toolchain/*.tar.xz /home/nerves/deploy/artifacts
      - run:
          name: Install dependencies
          command: |
            wget https://github.com/tcnksm/ghr/releases/download/v0.5.4/ghr_v0.5.4_linux_amd64.zip
            unzip ghr_v0.5.4_linux_amd64.zip
      - run:
          name: "Create Release Notes"
          command: grep -Pazo "(?s)(?<=## ${CIRCLE_TAG})[^#]+" ./CHANGELOG.md > /home/nerves/deploy/RELEASE_NOTES
      - run:
          name: Deploy artifacts to Github
          command: ./ghr -draft -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME -b "$(cat /home/nerves/deploy/RELEASE_NOTES)" $CIRCLE_TAG /home/nerves/deploy/artifacts

workflows:
  version: 2
  build_test_deploy:
    jobs:
      #-------------------------------
      # Build Toolchains
      #-------------------------------

      #-------------------------------
      # armv7_nerves_linux_gnueabihf
      #-------------------------------
      - build_linux_nerves_toolchain_armv7_nerves_linux_gnueabihf:
          <<: *build_workflow
      - build_rpi_nerves_toolchain_armv7_nerves_linux_gnueabihf:
          <<: *build_workflow

      #-------------------------------
      # Test Toolchains
      #-------------------------------
      # armv7_nerves_linux_gnueabihf
      #-------------------------------
      - test_linux_trusty_armv7_nerves_linux_gnueabihf:
          <<: *test_workflow
          requires:
            - build_linux_nerves_toolchain_armv7_nerves_linux_gnueabihf
      - test_linux_xenial_armv7_nerves_linux_gnueabihf:
          <<: *test_workflow
          requires:
            - build_linux_nerves_toolchain_armv7_nerves_linux_gnueabihf

      #-------------------------------
      # Deploy Toolchains
      #-------------------------------
      - deploy:
          <<: *deploy_workflow
          requires:
            - build_rpi_nerves_toolchain_armv7_nerves_linux_gnueabihf
